<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="430" viewBox="0 0 1000 430">
  <style>
    @keyframes pulse {
      0% { opacity: 0.8; }
      50% { opacity: 1; }
      100% { opacity: 0.8; }
    }
    
    .digit {
      fill: #00ff41;
      font-family: monospace;
      font-size: 22px;
      font-weight: bold;
    }
    
    .label {
      fill: #4CAF50;
      font-family: Arial, sans-serif;
      font-size: 18px;
      font-weight: bold;
    }
    
    .progress-fill {
      fill: #00ff41;
      opacity: 0.7;
      rx: 5;
    }
    
    .progress-bg {
      fill: #2d2d2d;
      rx: 5;
    }
    
    .separator {
      stroke: #818181;
      stroke-width: 1;
      stroke-dasharray: 2,2;
    }
    
    .seconds {
      animation: pulse 1s infinite;
    }
    
    .birthdate-info {
      fill: #818181;
      font-family: Arial, sans-serif;
      font-size: 12px;
      text-anchor: end;
    }
    
    .summary {
      fill: #00ff41;
      font-family: 'Courier New', monospace;
      font-size: 24px;
      font-weight: bold;
      text-anchor: middle;
    }
    
    .summary-container {
      fill: #2d2d2d;
      rx: 8;
      ry: 8;
    }
    
    .cycle-info {
      fill: #818181;
      font-family: Arial, sans-serif;
      font-size: 12px;
    }
  </style>
  
  <rect width="100%" height="100%" fill="#1e1e1e" rx="10" ry="10" />
  
  <!-- Summary Age Display at top -->
  <rect class="summary-container" x="50" y="15" width="900" height="40" />
  <text id="age-summary" class="summary" x="500" y="42">00 Years : 00 Months : 00 Days : 00:00:00</text>
  
  <line class="separator" x1="20" y1="70" x2="980" y2="70" stroke-width="2" stroke-dasharray="none" />
  
  <!-- Years -->
  <text id="years-label" class="label" x="20" y="100">YEARS</text>
  <text id="years-value" class="digit" x="180" y="100">00</text>
  <rect class="progress-bg" x="300" y="85" width="680" height="20" />
  <rect id="years-progress" class="progress-fill" x="300" y="85" width="0" height="20" />
  <text id="years-cycle" class="cycle-info" x="985" y="97">0/12</text>
  
  <line class="separator" x1="20" y1="117.5" x2="980" y2="117.5" />
  
  <!-- Months -->
  <text id="months-label" class="label" x="20" y="165">MONTHS</text>
  <text id="months-value" class="digit" x="180" y="165">000</text>
  <rect class="progress-bg" x="300" y="150" width="680" height="20" />
  <rect id="months-progress" class="progress-fill" x="300" y="150" width="0" height="20" />
  <text id="months-cycle" class="cycle-info" x="985" y="162">0/30</text>
  
  <line class="separator" x1="20" y1="182.5" x2="980" y2="182.5" />
  
  <!-- Days -->
  <text id="days-label" class="label" x="20" y="230">DAYS</text>
  <text id="days-value" class="digit" x="180" y="230">00000</text>
  <rect class="progress-bg" x="300" y="215" width="680" height="20" />
  <rect id="days-progress" class="progress-fill" x="300" y="215" width="0" height="20" />
  <text id="days-cycle" class="cycle-info" x="985" y="227">0/24</text>
  
  <line class="separator" x1="20" y1="247.5" x2="980" y2="247.5" />
  
  <!-- Hours -->
  <text id="hours-label" class="label" x="20" y="295">HOURS</text>
  <text id="hours-value" class="digit" x="180" y="295">000000</text>
  <rect class="progress-bg" x="300" y="280" width="680" height="20" />
  <rect id="hours-progress" class="progress-fill" x="300" y="280" width="0" height="20" />
  <text id="hours-cycle" class="cycle-info" x="985" y="292">0/60</text>
  
  <line class="separator" x1="20" y1="312.5" x2="980" y2="312.5" />
  
  <!-- Minutes -->
  <text id="minutes-label" class="label" x="20" y="360">MINUTES</text>
  <text id="minutes-value" class="digit" x="180" y="360">0000000</text>
  <rect class="progress-bg" x="300" y="345" width="680" height="20" />
  <rect id="minutes-progress" class="progress-fill" x="300" y="345" width="0" height="20" />
  <text id="minutes-cycle" class="cycle-info" x="985" y="357">0/60</text>
  
  <line class="separator" x1="20" y1="377.5" x2="980" y2="377.5" />
  
  <!-- Seconds -->
  <text id="seconds-label" class="label" x="20" y="425">SECONDS</text>
  <text id="seconds-value" class="digit seconds" x="180" y="425">00000000</text>
  <rect class="progress-bg" x="300" y="410" width="680" height="20" />
  <rect id="seconds-progress" class="progress-fill" x="300" y="410" width="0" height="20" />
  <text id="seconds-cycle" class="cycle-info" x="985" y="422">0/1000</text>
  
  <!-- Birthdate info -->
  <text class="birthdate-info" x="970" y="15">Since: January 1, 1998</text>
  
  <script type="text/javascript"><![CDATA[
    // Set birth date (can be changed as needed)
    const birthdate = new Date('1998-01-01T00:00:00');
    
    // Update birthdate info text
    const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    document.querySelector('.birthdate-info').textContent = 
      `Since: ${months[birthdate.getMonth()]} ${birthdate.getDate()}, ${birthdate.getFullYear()}`;
    
    // Get days in month
    function getDaysInMonth(year, month) {
      return new Date(year, month + 1, 0).getDate();
    }
    
    // Calculate age in different units
    function calculateAge() {
      const now = new Date();
      const diff = now - birthdate;
      
      // Calculate years
      const ageDate = new Date(diff);
      const years = Math.abs(ageDate.getUTCFullYear() - 1970);
      
      // Calculate months
      const monthsDiff = (now.getFullYear() - birthdate.getFullYear()) * 12;
      const months = monthsDiff + now.getMonth() - birthdate.getMonth();
      
      // Calculate remaining months (for summary display)
      const remainingMonths = months % 12;
      
      // Calculate days with remainders for summary display
      const totalDays = Math.floor(diff / (1000 * 60 * 60 * 24));
      const remainingDays = totalDays % 30;
      
      // Calculate hours, minutes, seconds
      const hours = Math.floor(diff / (1000 * 60 * 60));
      const remainingHours = hours % 24;
      
      const minutes = Math.floor(diff / (1000 * 60));
      const remainingMinutes = minutes % 60;
      
      const seconds = Math.floor(diff / 1000);
      const remainingSeconds = seconds % 60;
      
      const milliseconds = diff % 1000;
      
      // Progress calculations for current cycles
      // For year progress: month of year / 12 months
      const currentMonth = now.getMonth(); // 0-11
      const yearProgress = ((currentMonth + 1) / 12) * 100;
      
      // For month progress: day of month / days in month
      const currentDayOfMonth = now.getDate(); // 1-31
      const daysInMonth = getDaysInMonth(now.getFullYear(), now.getMonth());
      const monthProgress = (currentDayOfMonth / daysInMonth) * 100;
      
      // For day progress: hour of day / 24 hours
      const currentHour = now.getHours(); // 0-23
      const dayProgress = (currentHour / 24) * 100;
      
      // For hour progress: minute of hour / 60 minutes
      const currentMinute = now.getMinutes(); // 0-59
      const hourProgress = (currentMinute / 60) * 100;
      
      // For minute progress: second of minute / 60 seconds
      const currentSecond = now.getSeconds(); // 0-59
      const minuteProgress = (currentSecond / 60) * 100;
      
      // For second progress: millisecond of second / 1000 milliseconds
      const secondProgress = (milliseconds / 1000) * 100;
      
      return {
        years,
        months,
        days: totalDays,
        hours,
        minutes,
        seconds,
        remainingMonths,
        remainingDays,
        remainingHours,
        remainingMinutes,
        remainingSeconds,
        cycles: {
          month: currentMonth + 1,
          day: currentDayOfMonth,
          hour: currentHour,
          minute: currentMinute,
          second: currentSecond,
          millisecond: milliseconds,
          daysInMonth: daysInMonth
        },
        progress: {
          years: yearProgress,
          months: monthProgress,
          days: dayProgress,
          hours: hourProgress,
          minutes: minuteProgress,
          seconds: secondProgress
        }
      };
    }
    
    // Update display with calculated age
    function updateDisplay() {
      const age = calculateAge();
      
      // Update summary text
      document.getElementById("age-summary").textContent = 
        `${age.years.toString().padStart(2, '0')} Years : ${age.remainingMonths.toString().padStart(2, '0')} Months : ${age.remainingDays.toString().padStart(2, '0')} Days : ${age.remainingHours.toString().padStart(2, '0')}:${age.remainingMinutes.toString().padStart(2, '0')}:${age.remainingSeconds.toString().padStart(2, '0')}`;
      
      // Update individual display text and progress bars
      document.getElementById("years-value").textContent = age.years.toString().padStart(2, '0');
      document.getElementById("months-value").textContent = age.months.toString().padStart(3, '0');
      document.getElementById("days-value").textContent = age.days.toString().padStart(5, '0');
      document.getElementById("hours-value").textContent = age.hours.toString().padStart(6, '0');
      document.getElementById("minutes-value").textContent = age.minutes.toString().padStart(7, '0');
      document.getElementById("seconds-value").textContent = age.seconds.toString().padStart(8, '0');
      
      // Update progress bars
      document.getElementById("years-progress").setAttribute("width", `${6.8 * age.progress.years}`);
      document.getElementById("months-progress").setAttribute("width", `${6.8 * age.progress.months}`);
      document.getElementById("days-progress").setAttribute("width", `${6.8 * age.progress.days}`);
      document.getElementById("hours-progress").setAttribute("width", `${6.8 * age.progress.hours}`);
      document.getElementById("minutes-progress").setAttribute("width", `${6.8 * age.progress.minutes}`);
      document.getElementById("seconds-progress").setAttribute("width", `${6.8 * age.progress.seconds}`);
      
      // Update cycle info text
      document.getElementById("years-cycle").textContent = `${age.cycles.month}/12`;
      document.getElementById("months-cycle").textContent = `${age.cycles.day}/${age.cycles.daysInMonth}`;
      document.getElementById("days-cycle").textContent = `${age.cycles.hour}/24`;
      document.getElementById("hours-cycle").textContent = `${age.cycles.minute}/60`;
      document.getElementById("minutes-cycle").textContent = `${age.cycles.second}/60`;
      document.getElementById("seconds-cycle").textContent = `${age.cycles.millisecond}/1000`;
    }
    
    // Initialize and start updates
    updateDisplay();
    setInterval(updateDisplay, 1000);
  ]]></script>
</svg> 